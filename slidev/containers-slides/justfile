#!/usr/bin/env just --justfile
set unstable

dind-runner-build:
    docker build -t dind-runner dind_runner


dind-proxy-server:
    uv run ws_proxy_server.py

[script("bash")]
dind-test:
    sess_json=$(curl -X POST http://localhost:5000/session \
        -H "Content-Type: application/json" \
        -d '{"wait": "true", "timeout": "15"}')
    sess_id=$(echo "$sess_json" | jq -r ".id")
    sess_port=$(echo "$sess_json" | jq -r ".port")
    echo "Started Session: ID=$sess_id Port: $sess_port"
    echo "Running command"
    endpoint="http://127.0.0.1:5000/run?sess=$sess_id"
    echo "Endpoint: $endpoint"
    curl -X POST $endpoint \
    -H "Content-Type: application/json" \
    -d '{"cmd": "docker run hello-world", "debug": "false"}'
    docker logs -f $sess_id
    curl -X DELETE http://localhost:5000/session?sess=$sess_id

stop-sessions +flags:
  docker container ls --format='{{{{.Names}}' --filter "ancestor=dind-runner" {{flags}} | xargs -I {} docker stop {}


tf-rebuild-ec2:
    terraform destroy -target=aws_instance.workshop -target=aws_eip_association.workshop
    terraform apply -target=aws_instance.workshop -target=aws_eip_association.workshop

tf-up:
    terraform apply -auto-approve

cf-up:
    cloudflared tunnel --config infra/cf-config-prod.yml run docker-workshop

ec2-ssh:
    ssh -o PubkeyAcceptedAlgorithms=+ssh-rsa -o HostKeyAlgorithms=+ssh-rsa -i .ssh/workshop_key ubuntu@$(terraform output -raw instance_ip)
